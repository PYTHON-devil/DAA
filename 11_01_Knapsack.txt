#include <iostream>
#include <algorithm>
using namespace std;

int knapsack(int W, int wt[], int val[], int n) {
    int K[n + 1][W + 1];

    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                K[i][w] = 0;
            else if (wt[i - 1] <= w)
                K[i][w] = max(val[i - 1] + K[i - 1][w - wt[i - 1]], K[i - 1][w]);
            else
                K[i][w] = K[i - 1][w];
        }
    }
    return K[n][W];
}

int main() {
    int n = 4, W = 5;
    int val[] = { 60, 100, 120, 40 };
    int wt[] = { 2, 3, 4, 1 };
    int result = knapsack(W, wt, val, n);
    cout << "Maximum value in Knapsack = " << result << endl;
    return 0;
}
